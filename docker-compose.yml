version: "3.3"

services:
  api:
    image: joshuamshana/bfast-ee:v0.4.0-beta7
    hostname: bfast
    restart: always
    networks:
      - bfastnet
      - default
#    environment:
##      - DEBUG='false'
    ports:
      - 3000
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    labels:
      - "traefik.docker.network=bfastnet"
    deploy:
      labels:
        - "traefik.docker.network=bfastnet"
        - "traefik.enable=true"
        - "traefik.frontend.rule=Host:api.bfast.fahamutech.com"
        - "traefik.port=3000"
        - "traefik.protocol=http"
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
        delay: 2s
      resources:
        limits:
          memory: 100M
  mdb:
    image: mongo:4-bionic
    hostname: mdb
    volumes:
      - mdbdata:/data/db
    restart: always
    networks:
      - default
      - bfastnet
    depends_on:
      - mdbrs1
      - mdbrs2
    environment:
      - MONGO_INITDB_ROOT_USERNAME=joshua
      - MONGO_INITDB_ROOT_PASSWORD=joshua
      - MONGO_INITDB_DATABASE=admin
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
        delay: 2s
        #for test
      resources:
        limits:
          memory: 100M
      # rollback_config:
      #   failure_action: continue
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "bfastRS" ]
  mdbrs1:
    image: mongo:4-bionic
    hostname: mdbrs1
    volumes:
      - mongodatars1:/data/db
    networks:
      - default
      - bfastnet
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=joshua
      - MONGO_INITDB_ROOT_PASSWORD=joshua
      - MONGO_INITDB_DATABASE=admin
    deploy:
      restart_policy:
        condition: any
        delay: 2s
        #for test
      resources:
        limits:
          memory: 100M
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "bfastRS" ]
  mdbrs2:
    image: mongo:4-bionic
    hostname: mdbrs2
    volumes:
      - mongodatars2:/data/db
    networks:
      - default
      - bfastnet
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=joshua
      - MONGO_INITDB_ROOT_PASSWORD=joshua
      - MONGO_INITDB_DATABASE=admin
    deploy:
      restart_policy:
        condition: any
        delay: 2s
      # for test
      resources:
        limits:
          memory: 100M
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "bfastRS"]
  rdb:
    image: redis:5-alpine
    hostname: rdb
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 2s
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          memory: 80M
    networks:
      - bfastnet
      - default
    volumes:
      - redisdata:/data
    command:
      - --appendonly yes
  traefik:
    image: traefik:v1.7
    hostname: traefik
    # container_name: "traefik"
    working_dir: /app
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 2s
      placement:
        constraints: [node.role == manager]
      # for test
      resources:
        limits:
          memory: 80M
    ports:
      - 80:80
      - 8443:8443
    networks:
      - bfastnet
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ssl/fullchain2.pem:/app/fullchain.pem
      - ./ssl/privkey2.pem:/app/privkey.pem

    command:
      # - "--api.insecure=true"
      # - "--providers.docker=true"
      - --logLevel=ERROR
      - --defaultentrypoints=http,https
      - --entryPoints=Name:http Address::80 Redirect.EntryPoint:https
      - --entryPoints=Name:https Address::8443 TLS:/app/fullchain.pem,/app/privkey.pem
      - --retry
      - --docker
      - --docker.swarmMode
      - --docker.network=bfastnet
      - --docker.endpoint=unix:///var/run/docker.sock
      - --docker.domain=api.bfast.fahamutech.com
      - --docker.watch=true
      - --docker.exposedbydefault=false
      # - "--acme.email=mama27j@gmail.com"
      # - "--acme.storage=acme.json"
      # - "--acme.entryPoint=https"
      # - "--acme.onHostRule=true"
      # - "--acme.tlsChallenge=true"
volumes:
  mdbdata:
  traefikdata:
  mongodatars2:
  mongodatars1:
  redisdata:
networks:
  bfastnet:
    # driver: overlay
    # attachable: true
    external: true
