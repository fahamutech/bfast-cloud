version: "3.3"

services:
  api:
    image: joshuamshana/bfast-ee:v0.4.0-beta18
    hostname: bfast
    restart: always
    networks:
      - bfastweb
      - default
    ports:
      - 3000
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    labels:
      - "traefik.docker.network=bfastweb"
    deploy:
      labels:
        - "traefik.docker.network=bfastweb"
        - "traefik.enable=true"
        - "traefik.frontend.rule=Host:api.bfast.fahamutech.com"
        - "traefik.port=3000"
        - "traefik.protocol=http"
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
        delay: 2s
  #  cdb:
  #    image: couchbase:community
  #    hostname: cbd
  #    restart: always
  #    networks:
  #      - bfastweb
  #      - default
  #    ports:
  #      - 8091-8094
  #      - 11210
  #    volumes:
  #      - cbddata:/opt/couchbase/var
  #    deploy:
  #      labels:
  #        - "traefik.docker.network=bfastweb"
  #        - "traefik.enable=true"
  #        - "traefik.frontend.rule=Host:io.bfast.fahamutech.com"
  #        - "traefik.port=8091"
  #        - "traefik.protocol=http"
  #      placement:
  #        constraints: [node.role == manager]
  #      restart_policy:
  #        condition: any
  #        delay: 2s
  mdb:
    image: mongo:4-bionic
    hostname: mdb
    volumes:
      - mdbdata:/data/db
    restart: always
    networks:
      - default
      - bfastweb
    depends_on:
      - mdbrs1
      - mdbrs2
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
        delay: 2s
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "bfastRS" ]
  mdbrs1:
    image: mongo:4-bionic
    hostname: mdbrs1
    volumes:
      - mongodatars1:/data/db
    networks:
      - default
      - bfastweb
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 2s
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "bfastRS" ]
  mdbrs2:
    image: mongo:4-bionic
    hostname: mdbrs2
    volumes:
      - mongodatars2:/data/db
    networks:
      - default
      - bfastweb
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 2s
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "bfastRS"]
  rdb:
    image: redis:5-alpine
    hostname: rdb
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 2s
      placement:
        constraints: [node.role == manager]
    networks:
      - bfastweb
      - default
    volumes:
      - redisdata:/data
    command:
      - --appendonly yes
  traefik:
    image: traefik:v1.7
    hostname: traefik
    working_dir: /app
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 2s
      placement:
        constraints: [node.role == manager]
    ports:
      - 80:80
      - 443:443
    networks:
      - bfastweb
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ssl/fullchain2.pem:/app/fullchain.pem
      - ./ssl/privkey2.pem:/app/privkey.pem
    command:
      - --logLevel=ERROR
      - --defaultentrypoints=http,https
      - --entryPoints=Name:http Address::80 Redirect.EntryPoint:https
      - --entryPoints=Name:https Address::443 TLS:/app/fullchain.pem,/app/privkey.pem
      - --retry
      - --docker
      - --docker.swarmMode
      - --docker.network=bfastweb
      - --docker.endpoint=unix:///var/run/docker.sock
      - --docker.domain=api.bfast.fahamutech.com
      - --docker.watch=true
      - --docker.exposedbydefault=false
volumes:
  mdbdata:
  traefikdata:
  mongodatars2:
  mongodatars1:
  redisdata:
  cbddata:
networks:
  bfastweb:
    external: true
